{"ast":null,"code":"import _regeneratorRuntime from \"E:\\\\Werewolf\\\\werewolf_01\\\\client\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"E:\\\\Werewolf\\\\werewolf_01\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"E:\\\\Werewolf\\\\werewolf_01\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\Werewolf\\\\werewolf_01\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\Werewolf\\\\werewolf_01\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\Werewolf\\\\werewolf_01\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\Werewolf\\\\werewolf_01\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\Werewolf\\\\werewolf_01\\\\client\\\\src\\\\components\\\\Login\\\\Login.js\";\nimport React, { Component } from 'react';\nimport { Redirect, Route, withRouter } from 'react-router-dom';\nimport MainPage from '../MainPage/MainPage';\n\nvar uniqid = require('uniqid');\n\nvar axios = require('axios');\n\nvar serverUrl = 'http://localhost:3001/';\nvar insertedRoomid;\n\nvar Login =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Login, _Component);\n\n  function Login() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Login)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      username: \"\",\n      roomid: \"\",\n      newUserBttnClicked: false,\n      newRoomBttnClicked: false,\n      joinBttnClicked: false,\n      usernameExists: false\n    };\n\n    _this.newUserButton = function () {\n      if (_this.state.username !== \"\" || _this.state.username.length !== 0) {\n        //to insert a player row info in Player database\n        axios({\n          method: 'post',\n          url: serverUrl + 'players/create',\n          data: {\n            username: _this.state.username,\n            timeCreated: Date.now()\n          }\n        }).then(function (response) {\n          if (response.data === \"ok\") {\n            _this.setState({\n              newUserBttnClicked: true,\n              usernameExists: false\n            });\n          } else if (response.data === \"username exists\") {\n            _this.setState({\n              usernameExists: true,\n              newUserBttnClicked: false\n            });\n          }\n        }).catch(function (err) {\n          console.log(err);\n        });\n      } else {\n        _this.setState({\n          newUserBttnClicked: false\n        });\n      }\n    };\n\n    _this.newRoomButton = function () {\n      var roomid = uniqid();\n\n      _this.setState({\n        roomid: roomid\n      }); //to verify that the player's username is successfully created and stored in the database\n\n\n      axios({\n        method: 'get',\n        url: serverUrl + 'players/' + _this.state.username.toString().replace(' ', '-'),\n        responseType: 'text'\n      }).then(function (response) {\n        if (response.data === \"ok\") {\n          //to create a room id collection and update the rooomid field of current player's row in Rooms collections \n          axios({\n            method: 'post',\n            url: serverUrl + 'rooms/create',\n            data: {\n              roomid: roomid,\n              admin: _this.state.username,\n              timeCreated: Date.now(),\n              numberOfPlayers: 1,\n              moves: []\n            }\n          }).then(function (response) {\n            if (response.data === \"ok\") {\n              _this.setState({\n                newRoomBttnClicked: true\n              });\n            } else {\n              _this.setState({\n                newRoomBttnClicked: false\n              });\n            }\n          }).catch(function (err) {\n            console.log(err);\n          });\n        } else {\n          _this.setState({\n            newRoomBttnClicked: false\n          });\n        }\n      }).catch(function (err) {\n        console.log(err);\n      });\n    };\n\n    _this.joinButton = function () {\n      //to verify that the inserted room id exists\n      var test =\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee() {\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  axios({\n                    method: 'get',\n                    url: serverUrl + 'rooms/' + insertedRoomid\n                  }).then(function (response) {\n                    if (response.data === \"ok\") {\n                      //to update the current username in Players collection, the relevant row in Rooms collection and the information in roomid collection\n                      axios({\n                        method: 'post',\n                        url: serverUrl + 'rooms/update',\n                        data: {\n                          roomid: insertedRoomid\n                        }\n                      });\n                    }\n                  }).catch(function (err) {\n                    return console.log(err);\n                  });\n\n                case 1:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, this);\n        }));\n\n        return function test() {\n          return _ref.apply(this, arguments);\n        };\n      }();\n    };\n\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"Login-page-cover\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Login-page-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, \"Login title\")), React.createElement(\"div\", {\n        className: \"Login-page-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"username \"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"player_username\",\n        onChange: function onChange(e) {\n          return _this2.setState({\n            username: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"button\",\n        onClick: this.newUserButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, \"create new username\"), this.state.newUserBttnClicked ? React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \"Username created successfully\") : this.state.usernameExists ? React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, \"username already exists\") : React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, \"please enter a name\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, \"If you want to generate a new play room, click the following button \"), React.createElement(\"button\", {\n        type: \"button\",\n        onClick: this.newRoomButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, \"create new room\"), this.state.newRoomBttnClicked ? React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, \"New room created, here is the room id: \", this.state.roomid) : null, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, \"if you already have the generated room id, please type to join \"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"player_roomid\",\n        id: \"player_roomid\",\n        onChange: function onChange(e) {\n          return insertedRoomid = e.target.value;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"button\",\n        onClick: this.joinButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, \"join\")));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nexport default Login;","map":{"version":3,"sources":["E:\\Werewolf\\werewolf_01\\client\\src\\components\\Login\\Login.js"],"names":["React","Component","Redirect","Route","withRouter","MainPage","uniqid","require","axios","serverUrl","insertedRoomid","Login","state","username","roomid","newUserBttnClicked","newRoomBttnClicked","joinBttnClicked","usernameExists","newUserButton","length","method","url","data","timeCreated","Date","now","then","response","setState","catch","err","console","log","newRoomButton","toString","replace","responseType","admin","numberOfPlayers","moves","joinButton","test","prevProps","prevState","e","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Redirect, Route, withRouter } from 'react-router-dom'\r\n\r\nimport MainPage from '../MainPage/MainPage'\r\n\r\nconst uniqid = require('uniqid')\r\nconst axios = require('axios')\r\n\r\nconst serverUrl = 'http://localhost:3001/'\r\n\r\nlet insertedRoomid\r\n\r\n\r\nclass Login extends Component{\r\n\r\n    state={\r\n        username: \"\",\r\n        roomid: \"\",\r\n        newUserBttnClicked: false,\r\n        newRoomBttnClicked: false,\r\n        joinBttnClicked: false,\r\n        usernameExists: false\r\n    }\r\n\r\n    newUserButton = () => {\r\n        if(this.state.username !== \"\" || this.state.username.length !== 0){\r\n\r\n            //to insert a player row info in Player database\r\n            axios({\r\n                method: 'post',\r\n                url: serverUrl + 'players/create',\r\n                data: {\r\n                    username: this.state.username,\r\n                    timeCreated: Date.now()\r\n                }\r\n            })\r\n            .then(response => {\r\n                if(response.data === \"ok\"){\r\n                    this.setState({\r\n                        newUserBttnClicked: true,\r\n                        usernameExists: false\r\n                    })\r\n                }\r\n                \r\n                else if (response.data === \"username exists\"){\r\n                    this.setState({\r\n                        usernameExists: true,\r\n                        newUserBttnClicked: false\r\n                    })\r\n                }\r\n\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n        }\r\n\r\n        else{\r\n            this.setState({\r\n                newUserBttnClicked: false\r\n            })\r\n        }\r\n    }\r\n\r\n    newRoomButton = () => {\r\n        var roomid = uniqid()\r\n\r\n        this.setState({\r\n            roomid: roomid\r\n        })\r\n\r\n        //to verify that the player's username is successfully created and stored in the database\r\n        axios({\r\n            method: 'get',\r\n            url: serverUrl + 'players/' + this.state.username.toString().replace(' ', '-'),\r\n            responseType: 'text'\r\n        })\r\n        .then(response => {\r\n            if(response.data === \"ok\"){\r\n\r\n                //to create a room id collection and update the rooomid field of current player's row in Rooms collections \r\n                axios({\r\n                    method: 'post',\r\n                    url: serverUrl + 'rooms/create',\r\n                    data: {\r\n                        roomid: roomid,\r\n                        admin: this.state.username,\r\n                        timeCreated: Date.now(),\r\n                        numberOfPlayers: 1,\r\n                        moves: [] \r\n                    }\r\n                })\r\n                .then(response => {\r\n                    if(response.data === \"ok\"){\r\n                        this.setState(\r\n                        {\r\n                            newRoomBttnClicked  : true\r\n                        })\r\n                    }\r\n\r\n                    else{\r\n                        this.setState(\r\n                        {\r\n                            newRoomBttnClicked  : false\r\n                        })\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    console.log(err)\r\n                })\r\n            }\r\n\r\n            else{\r\n                this.setState(\r\n                {\r\n                    newRoomBttnClicked  : false\r\n                })\r\n            }\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    joinButton = () =>{\r\n\r\n        //to verify that the inserted room id exists\r\n        let test = async () => {axios({\r\n            method: 'get',\r\n            url: serverUrl + 'rooms/' + insertedRoomid,\r\n        })\r\n        .then(response => {\r\n            if(response.data === \"ok\"){\r\n                \r\n                //to update the current username in Players collection, the relevant row in Rooms collection and the information in roomid collection\r\n                axios({\r\n                    method: 'post',\r\n                    url: serverUrl + 'rooms/update',\r\n                    data: {\r\n                        roomid: insertedRoomid,\r\n\r\n                    }\r\n                })\r\n            }\r\n        })\r\n        .catch(err => console.log(err))\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState){\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"Login-page-cover\">\r\n                <div className=\"Login-page-title\">\r\n                    <h2>Login title</h2>\r\n                </div>\r\n                <div className=\"Login-page-body\">\r\n                    <label>username </label>\r\n                    <input type=\"text\" name=\"player_username\" onChange={e => this.setState({username: e.target.value})}/>\r\n                    <button type=\"button\" onClick={this.newUserButton}>create new username</button>\r\n\r\n                    {this.state.newUserBttnClicked ? \r\n                        <p>Username created successfully</p>\r\n                        :\r\n                        (\r\n                            this.state.usernameExists ?\r\n                                \r\n                                <p>username already exists</p>\r\n\r\n                                :\r\n\r\n                                <p>please enter a name</p>\r\n                        )   \r\n                    }\r\n                    <br></br>\r\n\r\n                    <label>If you want to generate a new play room, click the following button </label>\r\n                    <button type=\"button\" onClick={this.newRoomButton}>create new room</button>\r\n\r\n                    {this.state.newRoomBttnClicked ? \r\n                        <p>New room created, here is the room id: {this.state.roomid}</p>\r\n                        :\r\n                        null\r\n                    }\r\n                    <br></br>\r\n\r\n                    <label>if you already have the generated room id, please type to join </label>\r\n                    <input type=\"text\" name=\"player_roomid\" id=\"player_roomid\" onChange={e => insertedRoomid = e.target.value}/>\r\n                    <button type=\"button\" onClick={this.joinButton}>join</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login"]},"metadata":{},"sourceType":"module"}