{"ast":null,"code":"import _classCallCheck from \"E:\\\\Werewolf\\\\werewolf_01\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\Werewolf\\\\werewolf_01\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\Werewolf\\\\werewolf_01\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\Werewolf\\\\werewolf_01\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\Werewolf\\\\werewolf_01\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\Werewolf\\\\werewolf_01\\\\client\\\\src\\\\components\\\\Login\\\\Login.js\";\nimport React, { Component } from 'react';\nimport { Redirect, Route, withRouter } from 'react-router-dom';\nimport MainPage from '../MainPage/MainPage';\n\nvar uniqid = require('uniqid');\n\nvar axios = require('axios');\n\nvar serverUrl = 'http://localhost:3001/';\nvar insertedRoomid;\n\nvar Login =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Login, _Component);\n\n  function Login() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Login)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      username: \"\",\n      roomid: \"\",\n      newUserBttnClicked: false,\n      newRoomBttnClicked: false,\n      joinBttnClicked: false\n    };\n\n    _this.newUserButton = function () {\n      if (_this.state.username !== \"\" || _this.state.username.length !== 0) {\n        _this.setState({\n          newUserBttnClicked: true\n        });\n\n        axios({\n          method: 'post',\n          url: serverUrl + 'new-user/create',\n          params: {\n            username: _this.state.username,\n            roomid: _this.state.roomid,\n            timeCreated: Date.now()\n          }\n        }).then(function (response) {\n          return console.log(response);\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      } else {\n        _this.setState({\n          newUserBttnClicked: false\n        });\n      }\n    };\n\n    _this.newRoomButton = function () {\n      _this.setState(function (prevState) {\n        return {\n          newRoomBttnClicked: !prevState.newRoomBttnClicked\n        };\n      });\n    };\n\n    _this.joinButton = function () {\n      _this.setState(function (prevState) {\n        return {\n          newButtonClicked: !prevState.newButtonClicked\n        };\n      });\n\n      axios({\n        method: 'post',\n        url: serverUrl + 'check-room',\n        params: {\n          username: _this.state.username\n        },\n        data: {\n          roomid: insertedRoomid\n        }\n      }).then(function (response) {\n        if (response.data === \"ok\") {\n          axios({\n            method: 'post',\n            url: serverUrl + 'main-page',\n            data: {\n              username: _this.state.username,\n              roomid: insertedRoomid\n            }\n          }).then(function (response) {\n            _this.props.history.push(\"/main-page\");\n          }).catch(function (err) {\n            return console.log(err);\n          });\n        }\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var roomid = uniqid();\n      this.setState({\n        roomid: roomid\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"Login-page-cover\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Login-page-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Login title\")), React.createElement(\"div\", {\n        className: \"Login-page-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"username \"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"player_username\",\n        onChange: function onChange(e) {\n          return _this2.setState({\n            username: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"button\",\n        onClick: this.newUserButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"create new username\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"If you want to generate a new play room, click the following button \"), React.createElement(\"button\", {\n        type: \"button\",\n        onClick: this.newRoomButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"create new room\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"if you already have the generated room id, please type to join \"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"player_roomid\",\n        id: \"player_roomid\",\n        onChange: function onChange(e) {\n          return insertedRoomid = e.target.value;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"button\",\n        onClick: this.joinButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"join\")), React.createElement(\"div\", {\n        className: \"Login-page-tail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, this.state.newButtonClicked ? this.state.roomid : null));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nexport default Login;","map":{"version":3,"sources":["E:\\Werewolf\\werewolf_01\\client\\src\\components\\Login\\Login.js"],"names":["React","Component","Redirect","Route","withRouter","MainPage","uniqid","require","axios","serverUrl","insertedRoomid","Login","state","username","roomid","newUserBttnClicked","newRoomBttnClicked","joinBttnClicked","newUserButton","length","setState","method","url","params","timeCreated","Date","now","then","response","console","log","catch","err","newRoomButton","prevState","joinButton","newButtonClicked","data","props","history","push","prevProps","e","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Redirect, Route, withRouter } from 'react-router-dom'\r\n\r\nimport MainPage from '../MainPage/MainPage'\r\n\r\nconst uniqid = require('uniqid')\r\nconst axios = require('axios')\r\n\r\nconst serverUrl = 'http://localhost:3001/'\r\n\r\nlet insertedRoomid\r\n\r\nclass Login extends Component{\r\n\r\n    state={\r\n        username: \"\",\r\n        roomid: \"\",\r\n        newUserBttnClicked: false,\r\n        newRoomBttnClicked: false,\r\n        joinBttnClicked: false\r\n    }\r\n\r\n    newUserButton = () => {\r\n        if(this.state.username !== \"\" || this.state.username.length !== 0){\r\n            this.setState({\r\n                newUserBttnClicked: true\r\n            })\r\n\r\n            axios({\r\n                method: 'post',\r\n                url: serverUrl + 'new-user/create',\r\n                params: {\r\n                    username: this.state.username,\r\n                    roomid: this.state.roomid,\r\n                    timeCreated: Date.now()\r\n                }\r\n                \r\n            })\r\n            .then(response => console.log(response))\r\n            .catch(err => console.log(err))\r\n        }\r\n\r\n        else{\r\n            this.setState({\r\n                newUserBttnClicked: false\r\n            })\r\n        }\r\n    }\r\n\r\n    newRoomButton = () => {\r\n        this.setState(prevState => ({\r\n            newRoomBttnClicked: !prevState.newRoomBttnClicked\r\n        }))\r\n    }\r\n\r\n    joinButton = () =>{\r\n        this.setState(prevState => ({\r\n            newButtonClicked: !prevState.newButtonClicked\r\n        }))\r\n\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: serverUrl + 'check-room',\r\n            params: {\r\n                username: this.state.username\r\n            },\r\n            data: {\r\n                roomid: insertedRoomid\r\n            }\r\n        })\r\n        .then(response => {\r\n            if(response.data === \"ok\"){\r\n                axios({\r\n                    method: 'post',\r\n                    url: serverUrl + 'main-page',\r\n                    data:{\r\n                        username: this.state.username,\r\n                        roomid: insertedRoomid\r\n                    }\r\n                })\r\n                .then(response => {\r\n                    this.props.history.push(`/main-page`)\r\n                })\r\n                .catch(err => console.log(err))\r\n            }\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n    componentDidMount(){\r\n        var roomid = uniqid()\r\n\r\n        this.setState({roomid: roomid})\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState){\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"Login-page-cover\">\r\n                <div className=\"Login-page-title\">\r\n                    <h2>Login title</h2>\r\n                </div>\r\n                <div className=\"Login-page-body\">\r\n                    <label>username </label>\r\n                    <input type=\"text\" name=\"player_username\" onChange={e => this.setState({username: e.target.value})}/>\r\n                    <button type=\"button\" onClick={this.newUserButton}>create new username</button>\r\n\r\n                    <br></br>\r\n                    <br></br>\r\n\r\n                    <label>If you want to generate a new play room, click the following button </label>\r\n                    <button type=\"button\" onClick={this.newRoomButton}>create new room</button>\r\n\r\n                    <br></br>\r\n                    <br></br>\r\n\r\n                    <label>if you already have the generated room id, please type to join </label>\r\n                    <input type=\"text\" name=\"player_roomid\" id=\"player_roomid\" onChange={e => insertedRoomid = e.target.value}/>\r\n                    <button type=\"button\" onClick={this.joinButton}>join</button>\r\n                </div>\r\n                <div className=\"Login-page-tail\">\r\n                    {this.state.newButtonClicked ? this.state.roomid : null}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login"]},"metadata":{},"sourceType":"module"}